# security:
#     enable_authenticator_manager: true
#     # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#     password_hashers:
#         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#     # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
#     providers:
#         # used to reload user from session & other features (e.g. switch_user)
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             lazy: true
#             provider: app_user_provider

#             # activate different ways to authenticate
#             # https://symfony.com/doc/current/security.html#the-firewall

#             # https://symfony.com/doc/current/security/impersonating_user.html
#             # switch_user: true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         # - { path: ^/admin, roles: ROLE_ADMIN }
#         # - { path: ^/profile, roles: ROLE_USER }

security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfonycasts.com/screencast/symfony6-upgrade/password-hashers
    # encoders: For previous SF version only, using password_hashers now
    #   App\Entity\User:
    #     algorithm: bcrypt
    #   MWS\MoonManagerBundle\Entity\MwsUser:
    #     algorithm: bcrypt

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        mws_user_provider:
            entity:
                class: MWS\MoonManagerBundle\Entity\MwsUser
                property: username
    firewalls:
        register:
            pattern: ^/api/register
            provider: app_user_provider
            stateless: true
            # anonymous: true # The authenticator manager no longer has "anonymous" security. Please remove this option under the "register" firewall.
        login:
            pattern: ^/api/login
            provider: app_user_provider
            stateless: true
            # anonymous: true # The authenticator manager no longer has "anonymous" security. Please remove this option under the "register" firewall.
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            # https://symfony.com/bundles/LexikJWTAuthenticationBundle/current/index.html#symfony-5-3-and-higher
            jwt: ~
            # https://symfonycasts.com/screencast/symfony6-upgrade/authenticator-upgrade#guard-gt-custom-authenticator-conversion
            # guard: # Before SF 5.3
            #   authenticators:
            #   - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # TODO : inject/sync with MoonManager recipe
        mws_secured_area:
            pattern: ^/
            # pattern: ^/mws/
            # encoders:
            #   Symfony\Component\Security\Core\User\User:
            #     algorithm: bcrypt
            #     cost: 12
            lazy: true
            provider: mws_user_provider
            custom_authenticator: MWS\MoonManagerBundle\Security\MwsLoginFormAuthenticator
            # entry_point: MWS\MoonManagerBundle\Security\MwsLoginFormAuthenticator
            entry_point: MWS\MoonManagerBundle\Security\MwsAuthenticationEntryPoint
            access_denied_handler: MWS\MoonManagerBundle\Security\MwsAccessDeniedHandler
            # access_denied_url: /login

            logout:
                path: mws_user_logout
                # where to redirect after logout
                target: app_home
            form_login:
                login_path: mws_login
                check_path: mws_login
                enable_csrf: true
                # TIPS : provider: mws_user_provide will not transit connected user from one area to another,
                # user more exposed pattern instead or multiple firewall
                # main:
                #     # anonymous: true # The authenticator manager no longer has "anonymous" security. Please remove this option under the "register" firewall.
                #     # https://symfony.com/doc/3.x/security/entity_provider.html
                #     # lazy: true
                #     pattern: ^/
                #     security: true
                #     provider: mws_user_provider
                #     custom_authenticator: MWS\MoonManagerBundle\Security\MwsLoginFormAuthenticator
                #     entry_point: MWS\MoonManagerBundle\Security\MwsAuthenticationEntryPoint
                #     access_denied_handler: MWS\MoonManagerBundle\Security\MwsAccessDeniedHandler
                #     logout:
                #         path: mws_user_logout
                #         # where to redirect after logout
                #         target: app_home
                #     form_login:
                #         login_path: mws_login
                #         check_path: mws_login
                #         enable_csrf: true

    access_control:
      - {path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY}
      - {path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
      - {path: ^/api, roles: IS_AUTHENTICATED_FULLY,}
      #   - {path: ^/, roles: IS_AUTHENTICATED_FULLY,}
      #   - {path: ^/, roles: PUBLIC_ACCESS,}
      # - {path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY,}
      # - {path: ^/, roles: [],}
      # # the 'ips' option supports IP addresses and subnet masks
      # - { path: '^/internal', roles: PUBLIC_ACCESS, ips: [127.0.0.1, ::1, 192.168.0.1/24] }
      # - { path: '^/internal', roles: ROLE_NO_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
