{# ðŸŒ–ðŸŒ– Copyright Monwoo 2023 ðŸŒ–ðŸŒ–, build by Miguel Monwoo (service@monwoo.com) #}
{% extends 'pdf-billings/base.html.twig' %}
{% set allowedHtmlTags = '<b>,<a>,<strong>,<br>,<pre>,<div>' %}
{% set fullWidth = 569 %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		.form-input {
			width: 100%;
		}
		button,
		input,
		textarea {
			margin: 4px;
			padding: 7px;
		}
		textarea {
			width: 94%;
			height: 4em;
		}
		label {
			font-weight: bold;
		}
		select {
			min-width: 30vw;
		}
		[id="billing_config_submitable_outlays"] > div:nth-child(even) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #CCCCCC;
			background: #EEEEEE;
			border-radius: 12px;
		}
		/* TODO : not working, add class and get better selectors ? */
		[id="billing_config_submitable_outlays"] > div:nth-child(odd) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #EEEEEE;
			background: #CCCCCC;
			border-radius: 12px;
		}
		[id="billing_config_submitable_outlays"] > div > label {
			font-size: 16pt;
			font-weight: bold;
			color: darkblue;
		}
		[id="billing_config_submitable_transactions"] > div:nth-child(even) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #CCCCCC;
			background: #EEEEEE;
			border-radius: 12px;
		}
		/* TODO : not working, add class and get better selectors ? */
		[id="billing_config_submitable_transactions"] > div:nth-child(odd) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #EEEEEE;
			background: #CCCCCC;
			border-radius: 12px;
		}
		[id="billing_config_submitable_transactions"] > div > label {
			font-size: 16pt;
			font-weight: bold;
			color: darkblue;
		}
		[id="billing_config_submitable_products"] > div:nth-child(even) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #CCCCCC;
			background: #EEEEEE;
			border-radius: 12px;
		}
		/* TODO : not working, add class and get better selectors ? */
		[id="billing_config_submitable_products"] > div:nth-child(odd) {
			margin: 12px 4px;
			padding: 7px;
			border: solid 1px #EEEEEE;
			background: #CCCCCC;
			border-radius: 12px;
		}
		[id="billing_config_submitable_products"] > div > label {
			font-size: 16pt;
			font-weight: bold;
			color: darkblue;
		}
		.workload-details {
			border: solid 1px black;
			border-radius: 12px;
			padding: 7px;
		}
		.workload-details-pre {
			/* display: pre; */
			overflow: hidden;
			height: 0;
		}
		.business-aim-details {
			border: solid 1px black;
			border-radius: 12px;
			padding: 7px;
		}
		.business-aim-details-pre {
			/* display: pre; */
			overflow: hidden;
			height: 0;
		}
	</style>
{% endblock %}

{% set tStamp = 'now'|date('U') %}

{% block body %}
	<div class="mws-window mws-ratio-4/6">
		<div
			class="mws-window-01 p-6">
			{# <button data-popover-target="mws-pdf-billing-main-menu"
						type="button"
						class="text-white bg-blue-700 hover:bg-blue-800
						focus:ring-4 focus:outline-none focus:ring-blue-300
						font-medium rounded-lg text-sm px-5 py-2.5 text-center
						dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
						>
							Menu
						</button>
						<div data-popover id="mws-pdf-billing-main-menu" role="tooltip"
						class="flex absolute z-10 invisible inline-block w-full text-sm
						text-gray-500 transition-opacity duration-300 
						bg-white border border-gray-200 rounded-lg shadow-sm 
						opacity-0 dark:text-gray-400 dark:bg-gray-800 dark:border-gray-600">
							<header class="py-5 bg-gray-700 text-white text-center"
							{{ svelte_component('MwsHeader', {
									"locale": app.locale
							}) }}>
							</header>
						</div> #}
			<button id="menu-timing-opener" data-collapse-toggle="menu-timing" type="button" class="rounded-lg m-2" aria-controls="search-timing-lookup" aria-expanded="false">
				Menu
			</button>
			<div class="mws-menu-wrapper inline-flex flex-col bg-yellow-100">
				<div id="menu-timing" class="detail hidden">
					<header class="w-full flex"
					{{ svelte_component('MwsHeader', {
							"locale": app.locale
					}) }}>
				</div>
			</div>
			<div class="preface m-3">
				<p>
					{{ 'mws.copyright'|trans|raw }}
					<br/>
					<br/>
					<a href="https://github.com/Monwoo/web-starters-free/tree/main/apps/mws-sf-pdf-billings" target="_blank">
						{{ 'mws.goToGithub'|trans|raw }}
					</a>
				</p>

				<div class="nav-item dropdown">
					{{ app.request.locale|locale_name(app.request.locale)|u.title }}
					<ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdown-language">
						<li>
							<a class="dropdown-item" href="{{ path('app_pdf_billings', {_locale: 'en'}) }}">
								{{ 'en'|locale_name('en')|u.title }}
							</a>
						</li>
						<li>
							<a class="dropdown-item" href="{{ path('app_pdf_billings', {_locale: 'fr'}) }}">
								{{ 'fr'|locale_name('fr')|u.title }}
							</a>
						</li>
					</ul>
				</div>

				<p>
					{{ 'mws.goToAppSupports'|trans|raw }}
					<a href="https://github.com/Monwoo/web-starters-free/issues" target="_blank">
						github.com/Monwoo/web-starters-free/issues
					</a>
				</p>
				<p>
					{{ 'mws.goToBusinessSupports'|trans|raw }}
					<a href="https://www.monwoo.com/don" target="_blank">
						www.monwoo.com/don
					</a>
				</p>
				<p>
					{% if gdprSentinelLoaded %}
						{# // TODO : why do not exist error in production ? #}
						{% set gdprLastCleanDate = gdprLastCleanDate ?? date('now') %}
						{% set gdprNextCleanDate = gdprNextCleanDate ?? date('now') %}
						{% set dateDiff = date().diff(gdprNextCleanDate) %}

						{{ gdprSentinelRequestCheck ? 'mws.gdpr.checkOK'|trans|raw : 'mws.gdpr.checkIsMissing'|trans|raw }}
						{{ 'mws.gdpr.endUserWarning'|trans({
							'%gdprNextCleanDate%': gdprNextCleanDate|format_datetime,
							'%diffSign%': dateDiff.invert ? '-' : '',
							'%hoursLeftBeforeReset%': (dateDiff.days * 24.0 + dateDiff.h + dateDiff.i / 60.0)|format_number({fraction_digit: 2}),
							'%gdprLastCleanDate%': gdprLastCleanDate|format_datetime,
							'%currentTime%': 'now'|format_datetime('short'),
						})|raw }}
					{% else %}
						{{ 'mws.gdpr.sentinelIsMissing'|trans|raw }}
					{% endif %}
					<br/>
					<a href="{{ path('app_factory_reset') }}" target="_blank" onclick="return confirm('Are you sure ? Will reset the serveur data for ALL USAGES.')">
						{{ 'mws.resetAppToFactory'|trans|raw }}
					</a>
				</p>
				<p style="display:flex;flex-wrap: wrap;">
					{{ 'mws.templates.availableListLabel'|trans|raw }}
					<br/><br/>
					{% set monwooTemplates = [ 
						'monwoo', 'monwoo-02-wp-e-com', 'monwoo-03-php-backend',
						'monwoo-04-hybrid-app', 'monwoo-05-php-crm',
						'monwoo-06-analytical-study', 'monwoo-07-upkeep',
						'monwoo-08-backend-learning', 'monwoo-09-empty' ] %}
					{# TIPS : setup with FULL translated string for extractions 
										tools to extract translated strings... #}
					{% set monwooTemplatesTranslatedLabels = {
						'monwoo' : 'mws.templates.labels.monwoo_01_WpDisplay'|trans,
						'monwoo-02-wp-e-com' : 'mws.templates.labels.monwoo_02_WpWaConfigECom'|trans,
						'monwoo-03-php-backend' : 'mws.templates.labels.monwoo_03_PhpBackend'|trans,
						'monwoo-04-hybrid-app' : 'mws.templates.labels.monwoo_04_hybridApp'|trans,
						'monwoo-05-php-crm' : 'mws.templates.labels.monwoo_05_PhpCrm'|trans,
						'monwoo-06-analytical-study' : 'mws.templates.labels.monwoo_06_analyticalStudy'|trans,
						'monwoo-07-upkeep' : 'mws.templates.labels.monwoo_07_upkeep'|trans,
						'monwoo-08-backend-learning' : 'mws.templates.labels.monwoo_08_backendLearning'|trans,
						'monwoo-09-empty' : 'mws.templates.labels.monwoo_09_empty'|trans,
					} %}
					{% for monwooTemplate in monwooTemplates %}
						<a href="{{ path('app_pdf_billings', { billing_config_submitable: { clientSlug: billingConfig.clientSlug, quotationTemplate: monwooTemplate, }, ts:tStamp }) }}" style="font-size:16pt;padding:7px;margin:7px;">
							{{ monwooTemplatesTranslatedLabels[monwooTemplate] }}
						</a>
						&nbsp;&nbsp;&nbsp;
					{% endfor %}
					<br/>
				</p>
			</div>

			<div class="billing-config-summary">
				<p>
					<strong>
						{% if billingConfig.quotationNumber %}
							{{billingConfig.quotationNumber}}
							via
						{% endif %}
						{{billingConfig.quotationSourceNumber}}
					</strong>
					pour :
					{{billingConfig.clientName}}</p>
				<p>Nb d'heures Monwoo :
					{{billingConfig.businessWorkloadHours ?? defaultBusinessWorkloadHours}}</p>
				<p>
					<strong>Template :
					</strong>
					{{billingConfig.quotationTemplate}}</p>
				{% if businessWorkloadTemplate %}
					<p>DÃ©tail des heures Monwoo :
					</p>
					<div class="workload-details" onclick="const preElt = document.querySelector('.workload-details-pre');
											preElt.offsetHeight === 0
											? (preElt.style.height = 'auto') : (preElt.style.height = '0px');">{{ (
						billingConfig.businessWorkloadDetails ?? include(businessWorkloadTemplate)
					)  |striptags(allowedHtmlTags)|raw}}
					</div>
					<pre class="workload-details-pre">{{ (
							billingConfig.businessWorkloadDetails ?? include(businessWorkloadTemplate)
						)  |striptags(allowedHtmlTags)}}
					</pre>
				{% endif %}
				<p>Objectifs de l'activitÃ© :
				</p>
				<div class="business-aim-details" onclick="const preElt = document.querySelector('.business-aim-details-pre');
									preElt.offsetHeight === 0
									? (preElt.style.height = 'auto') : (preElt.style.height = '0px');">{{ (
					include(businessAimTemplate)
				)  |striptags(allowedHtmlTags)|raw}}
				</div>
				<pre class="business-aim-details-pre">{{ (
						include(businessAimTemplate)
					)  |striptags(allowedHtmlTags)}}
				</pre>

			</div>

			<div>
				{# <a href="{{ asset(file.webPath) }}" download="{{ file.downloadFileName }}">
									Download current billing backup
								</a> #}
				<a href="{{ path('app_download_billing', { clientSlug: billingConfig.clientSlug } ) }}" target="_blank">
					Download current billing backup
				</a>
			</div>

			{{ form_start(form) }}
			{# <div class="">
							<div class="">
								{{ form_label(form.clientName) }}
								{{ form_widget(form.clientName) }}
								{{ form_errors(form.clientName) }}
							</div>
						</div> #}

			{# TIPS : https://symfony.com/doc/current/form/form_collections.html
						https://symfony.com/doc/current/form/form_themes.html#form-custom-prototype #}<ul class="outlays" data-index="{{ form.outlays|length > 0 ? form.outlays|last.vars.name + 1 : 0 }}" data-prototype="{{ form_widget(form.outlays.vars.prototype)|e('html_attr') }}"> </ul>
			<ul class="transactions" data-index="{{ form.transactions|length > 0 ? form.transactions|last.vars.name + 1 : 0 }}" data-prototype="{{ form_widget(form.transactions.vars.prototype)|e('html_attr') }}"></ul>
			<ul class="products" data-index="{{ form.products|length > 0 ? form.products|last.vars.name + 1 : 0 }}" data-prototype="{{ form_widget(form.products.vars.prototype)|e('html_attr') }}"></ul>

			{# <input
							type="hidden" name="_token" value="{{ csrf_token('pdf-billings') }}"> #}
			{# TIPS : {{ form_rest(form) }}
									with {{ form_end(form, {'render_rest': false}) }}
									to move the forme rest somewhere else
							#}
			{{ form_end(form) }}
			<br/><br/>
			<button type="button" class="add_outlay_link" data-collection-holder-class="outlays" type="button">Ajouter un dÃ©bours</button>

			<br/><br/>
			<button type="button" class="add_transaction_link" data-collection-holder-class="transactions" type="button">Ajouter une transaction</button>

			<br/><br/>
			<button type="button" class="add_product_link" data-collection-holder-class="products" type="button">Ajouter un produit</button>

			{# https://stackoverflow.com/questions/291813/recommended-way-to-embed-pdf-in-html #}
			{# Native way : #}
			<p style="text-align:right">
				<a href="{{ path('app_pdf_billings_view', { clientSlug: billingConfig.clientSlug, ts:tStamp } ) }}" target="_blank">
					Share a realtime PDF updated view of this billings to some client.
				</a>
				<br/>
				Advice : only for quick editing. GDPR sentinel will erase all data every 24hr.
								So best way to save your data, is to send the pdf by email.
			</p>
			<p
				style="text-align:right">
				{# <a href="{{ path('app_pdf_billings_view', { clientSlug: billingConfig.clientSlug, viewPart: 'CGV' } ) }}" target="_blank">
									Share a realtime PDF updated view of this billings to some client.
								</a> #}
				Comming soon : verify your PDF Authenticity and reload data from billings pdf imports.
			</p>
			<p style="text-align:right">
				<a href="{{ path('app_pdf_billings_view', { clientSlug: billingConfig.clientSlug, viewPart: 'CGV', ts:tStamp } ) }}" target="_blank">
					Conditions gÃ©nÃ©rales de vente
				</a>
			</p>

			<footer class="footer">
				<p>Â© Monwoo 2017-2024 (service@monwoo.com)</p>
			</footer>
		</div>
		<div class="mws-window-02 h-[70%]">
			{# TIPS : use Object to load under mobile webbrowser (or use jslib for more comparibilities)
						<embed src="{{ path('app_pdf_billings_view', {clientSlug:billingConfig.clientSlug} ) }}" style="width:100%; min-height:700px;" type="application/pdf"> #}

			{# <object data="MonwooDevis{{viewPart}}.pdf" type="application/pdf" frameborder="0" width="100%" height="600px" style="padding: 20px;">
							<embed src="{{ path('app_pdf_billings_view', {clientSlug:billingConfig.clientSlug} ) }}" style="width:100%; min-height:700px;" type="application/pdf">
						</object> #}<iframe src="{{ asset('libs/pdfjs-3.7.107-dist/web/viewer.html') }}?file={{ url('app_pdf_billings_view', {clientSlug:billingConfig.clientSlug, ts:tStamp})|url_encode(true) }}&embedded=true" class="w-full h-full" frameborder="0"> </iframe>

			{# TIPS : Need pdf.js integrated library : #}
		{# <iframe src="{{ asset('libs/pdfjs-3.7.107-dist/web/viewer.html') }}?file={{ url('app_pdf_billings_view')|url_encode(true) }}&embedded=true" style="width:100%; min-height:700px;" frameborder="0"></iframe> #}

			{# TIPS : Need to BE online to be valide for gview ? #}
			{# <iframe src="https://docs.google.com/gview?url={{ url('app_pdf_billings_view')|url_encode(true) }}&embedded=true" style="width:100%; min-height:700px;" frameborder="0"></iframe> #}
		</div>
	</div>

{% endblock %}

{% block javascript %}
	{{ parent() }}
	<script>
		// https://symfony.com/doc/current/form/form_collections.html#allowing-new-tags-with-the-prototype
const addOutlayFormDeleteLink = (item) => {
const removeFormButton = document.createElement('button');
// Disallow button submit on previous form possible user 'enter' key input
// onkeydown="return event.key != 'Enter';"
// removeFormButton.setAttribute('onkeydown', "return event.keyCode !== 13;");
// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button
// Type : button: The button has no default behavior, and does nothing
// when pressed by default. It can have client-side scripts listen
// to the element's events, which are triggered when the events occur.
removeFormButton.setAttribute('type', "button");

removeFormButton.innerText = 'Supprimer ce dÃ©bours';

item.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove the item for the outlay form
item.remove();
});
}

const addOutlayFormDeleteAllLink = (appendTo, itemsToDeleteSelector) => {
const removeFormButton = document.createElement('button');
removeFormButton.setAttribute('type', "button");
removeFormButton.innerText = 'Supprimer tous les dÃ©bours';

appendTo.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove all items for the outlays form
document.querySelectorAll(itemsToDeleteSelector).forEach(item => {
item.remove();
});
});
}

const billingConfigOutlaysSelector = '#billing_config_submitable_outlays';
const outlaysTarget = document.querySelector(billingConfigOutlaysSelector);
const outlaysItemSelector = '[id^="billing_config_submitable_outlays_"]:not([name])';

const addOutlayFormToCollection = (e) => {
const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

const item = document.createElement('div');

const idx = collectionHolder.dataset.index;
item.innerHTML = collectionHolder.dataset.prototype.replace(/__name__/g, idx);
item.insertAdjacentHTML('afterbegin', '<label class="required">' + idx + '</label>');
// add a delete link to the new form
addOutlayFormDeleteLink(item);

// collectionHolder.appendChild(item);
outlaysTarget.appendChild(item);

collectionHolder.dataset.index ++;
};

document.querySelectorAll('.add_outlay_link').forEach(btn => {
btn.addEventListener("click", addOutlayFormToCollection)
});

document.querySelectorAll(outlaysItemSelector).forEach((tag) => {
addOutlayFormDeleteLink(tag)
})
addOutlayFormDeleteAllLink(outlaysTarget.parentElement, outlaysItemSelector);

const addTransactionFormDeleteLink = (item) => {
const removeFormButton = document.createElement('button');
// Type : button: The button has no default behavior, and does nothing
removeFormButton.setAttribute('type', "button");
removeFormButton.innerText = 'Supprimer cette transaction';
item.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove the item for the outlay form
item.remove();
});
}

const addTransactionFormDeleteAllLink = (appendTo, itemsToDeleteSelector) => {
const removeFormButton = document.createElement('button');
removeFormButton.setAttribute('type', "button");
removeFormButton.innerText = 'Supprimer toutes les transactions';

appendTo.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove all items for the transaction form
document.querySelectorAll(itemsToDeleteSelector).forEach(item => {
item.remove();
});
});
}

const billingConfigTransactionsSelector = '#billing_config_submitable_transactions';
const transactionsTarget = document.querySelector(billingConfigTransactionsSelector);
const transactionsItemSelector = '[id="billing_config_submitable_transactions"] > div > [id^="billing_config_submitable_transactions_"]';

const addTransactionFormToCollection = (e) => {
const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

const item = document.createElement('div');

const idx = collectionHolder.dataset.index;
item.innerHTML = collectionHolder.dataset.prototype.replace(/__name__/g, idx);
item.insertAdjacentHTML('afterbegin', '<label class="required">' + idx + '</label>');
// add a delete link to the new form
addTransactionFormDeleteLink(item);

// collectionHolder.appendChild(item);
transactionsTarget.appendChild(item);

collectionHolder.dataset.index ++;
};

document.querySelectorAll('.add_transaction_link').forEach(btn => {
btn.addEventListener("click", addTransactionFormToCollection)
});

document.querySelectorAll(transactionsItemSelector).forEach((tag) => {
addTransactionFormDeleteLink(tag)
})
addTransactionFormDeleteAllLink(transactionsTarget.parentElement, transactionsItemSelector);

const addProductFormDeleteLink = (item) => {
const removeFormButton = document.createElement('button');
// Type : button: The button has no default behavior, and does nothing
removeFormButton.setAttribute('type', "button");
removeFormButton.innerText = 'Supprimer ce produit';
item.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove the item for the outlay form
item.remove();
});
}

const addProductFormDeleteAllLink = (appendTo, itemsToDeleteSelector) => {
const removeFormButton = document.createElement('button');
removeFormButton.setAttribute('type', "button");
removeFormButton.innerText = 'Supprimer tous les produits';

appendTo.append(removeFormButton);

removeFormButton.addEventListener('click', (e) => {
e.preventDefault();
// remove all items for the product form
document.querySelectorAll(itemsToDeleteSelector).forEach(item => {
item.remove();
});
});
}

const billingConfigProductsSelector = '#billing_config_submitable_products';
const productsTarget = document.querySelector(billingConfigProductsSelector);
const productsItemSelector = '[id^="billing_config_submitable_products_"]:not([name])';

const addProductFormToCollection = (e) => {
const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

const item = document.createElement('div');

const idx = collectionHolder.dataset.index;
item.innerHTML = collectionHolder.dataset.prototype.replace(/__name__/g, idx);
item.insertAdjacentHTML('afterbegin', '<label class="required">' + idx + '</label>');
// add a delete link to the new form
addProductFormDeleteLink(item);

// collectionHolder.appendChild(item);
productsTarget.appendChild(item);

collectionHolder.dataset.index ++;
};

document.querySelectorAll('.add_product_link').forEach(btn => {
btn.addEventListener("click", addProductFormToCollection)
});

document.querySelectorAll(productsItemSelector).forEach((tag) => {
addProductFormDeleteLink(tag)
})
addProductFormDeleteAllLink(productsTarget.parentElement, productsItemSelector);
	</script>

{% endblock %}
